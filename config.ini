[Simulator]
seedvalue = 1
#2
#One tile works with 7 and with 1 in goes into a loop
# L3 with seed 9 almost
#Tube with seed 4 works
#with 8 it is getting into a loop
#With L1 World
max_round = 100
visualization=1
random_order=1

[World]
window_size_x =600
window_size_y =800
size_x = 9
size_y = 6
max_particles=10000


[matter]
mm_limitation= 0
location_mm_size = 2
particle_mm_size = 2
tile_mm_size = 2
tile_color_map=0


[File]
#scenario = two_particles_tiles_locations.py
#scenario = tile_beside_particle.py
#scenario = lonely_particle.py
#scenario=one_particle_and_one_tile.py
#scenario = two_particles_infront.py
#scenario= n_particle_on_a_line.py
#scenario= lined_particles.py
#scenario=rand_n_tile_one_particle.py
#scenario = world_five_rings_particle.py
#scenario = world_five_rings_tiles.py
#scenario = world_five_rings_particle_tiles.py
#scenario=all_matters_in_1st_ring.py
#scenario = world_two_rings_particle_tiles.py
#scenario = world_two_rings_particle.py
#scenario = world_test_interfaces.py
#scenario=unsorted_tiles.py
#scenario=S2_oddGapWorld.py
#scenario=lonely_tile.py
#scenario=lonely_tile_L1.py
#scenario=lonely_tile_L2.py
#scenario=lonely_tile_L3.py
#scenario= S2_tripleTileLineWorld.py

#scenario=lined_particles_to_tile.py
#scenario = whole_island.py
# scenario = whole_island_ph1.py
#scenario = whole_island_ph2.py
#scenario = whole_island_ph3.py
##scenario = whole_island_L1.py
#orld = whole_island_L2.py
#scenario=reagenz.py
#scenario=cemal_world_30.py
#scenario=random_200_200_200.py



#solution = read_write.py
#solution = scanning.py
#solution = create_delete.py
#solution = scanning_for_all_aims.py
#solution = take_drop_matters.py
#solution = take_drop_particles.py
#solution = take_drop_tile.py
#solution =  random_walk.py

#solution=move_to_tile
#solution=walk_on_Take_Drop_tiles.py
#solution=move_to_tile_better
#solution =  round_walk.py
#solution =  round_walk_hex.py
#solution =  round_walk_hex_steps.py
#solution =  round_walk_hex_norec.py
#solution =  search_for_tile_rw.py
#solution =  test_all_the_interfaces.py
#solution =  pheromone_particle.py
#solution =  pheromone_location.py
#solution =  pheromone_location_with_nest.py
#solution =   strongest_pheromone_nest.py
#solution =   strongest_pheromone_nest_NB.py
#solution =   probability_pheromone_nest.py
#solution =   SolutionBeispiel.py
#solution =  random_walk_back_for.py
#solution =  random_walk_search.py
#solution =  oppnet_search.py
#solution =  oppnet_epidemic.py
#solution =  search_for_tile_rw.py
#solution = S2_allMoving.py
#solution = indi_encaps.py
#solution = no_jam_control.py
#solution = jam_neigh_controll.py
#solution = mv_ch_near_tile.py
#solution = flock_m2.py
#solution = flock_m3.py
#solution = flock_m4.py
#solution = greedy_enc_m1.py
#solution =  clockwise_enc_m1.py
#solution =  encaps_round.py
#solution =  encaps_round_m2.py
#solution =  encaps_tile_m1.py
#solution =  encaps_tile_m2.py
#solution =  encaps_tile_m3.py
#solution =  encaps_tile_m4.py
#solution =  encaps_tile_m5.py
#solution =  encaps_tile_m6.py
#solution =  encaps_tile_m7.py
#solution =  encaps_tile_m8.py
#solution =  encaps_tile_m9.py
#solution =  encaps_tile_m10.py
#solution =  encaps_tile_m11.py
#solution =  encaps_griddy_m1.py
#solution =  cemal_solution.py
#solution =  cemal_final.py
#solution = my_Zwei_Particle_solution.py
#solution = move_protocol.py
#solution = test_move_protocol.py


#random walk
#scenario = world_two_rings_particle_tiles.py
#solution =  random_walk_search.py

# Coating the Tile
#scenario = island_L2.py
#solution =  encaps_tile_m11.py


# Filling up the whole
#scenario = whole_island_ph3.py
#scenario = whole_island_L2.py
#solution = communication_m1.py

#Kalman Coating
solution = kalman_coating.py
#scenario=test_kalman.py
#scenario=S2_oddGapWorld.py
#scenario=S2_singleTileWorld.py
#scenario=lined_particles_to_tile.py
scenario = whole_island.py
#scenario = whole_island_tube.py
#scenario = tube_particles.py
#scenario=whole_island.py
#scenario = one_whole_island.py
#scenario = whole_island_ph1.py
#scenario = whole_island_ph2.py
#scenario = whole_island_ph3.py
#scenario = whole_island_L1.py
#scenario = whole_island_L2.py
#scenario=tile_beside_particle.py


# FLocking
#solution=flock_for_two.py
#solution=round_walk_hex_norec.py
#solution=testsol.py
#solution=get_together.py
#scenario=particle_line.py
#New Coating Algorithm
#solution = coating.py
